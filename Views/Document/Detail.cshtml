@using Microsoft.AspNetCore.Identity
@using StudyResource.ViewModels.Document
@model DocumentDetailViewModel
@inject UserManager<User> UserManager


@{
    ViewData["Title"] = "Detail";
    Layout = "_Layout";
}

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <title>@ViewData["Title"] - StudyResource</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="icon" href="~/etrain-master/img/favicon.png">
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="~/etrain-master/css/bootstrap.min.css">
    <!-- animate CSS -->
    <link rel="stylesheet" href="~/etrain-master/css/animate.css">
    <!-- owl carousel CSS -->
    <link rel="stylesheet" href="~/etrain-master/css/owl.carousel.min.css">
    <!-- themify CSS -->
    <link rel="stylesheet" href="~/etrain-master/css/themify-icons.css">
    <!-- flaticon CSS -->
    <link rel="stylesheet" href="~/etrain-master/css/flaticon.css">
    <!-- font awesome CSS -->
    <link rel="stylesheet" href="~/etrain-master/css/magnific-popup.css">
    <!-- swiper CSS -->
    <link rel="stylesheet" href="~/etrain-master/css/slick.css">
    <!-- style CSS -->
    <link rel="stylesheet" href="~/etrain-master/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.css">
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick-theme.min.css">

    <style>
        .breadcrumb:after {
            background-color: #f3f6fb;
        }

        .breadcrumb-item a {
            font-size: 16px;
            color: #000000;
            text-decoration: none;
        }

        .breadcrumb-item a:hover{
            color: #0c2e60;
            text-decoration: none;
        }

        #comments-section {
            max-height: 400px;
            overflow-y: auto;
        }

        .delete-comment {
            cursor: pointer;
            font-size: 1.2em;
            margin-left: 10px;
        }

        .nav-tabs .nav-link {
            color: gray; 
            font-weight: bold; 
            border: 1px solid transparent;
            border-radius: .25rem;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

        .nav-tabs .nav-link:hover {
            background-color: #f8f9fa;
            color: #0c2e60; 
        }

        .nav-tabs .nav-link.active {
            color: #0c2e60;
            background-color: #fff;
            border-color: #dee2e6 #dee2e6 #fff;
            font-weight: bold; 
        }

        .nav-tabs .nav-link h4 {
            color: gray;
            margin-bottom: 0;
            font-weight: bold;
        }

        .nav-tabs .nav-link:hover h4 {
            color: #0c2e60;
        }

        .nav-tabs .nav-link.active h4 {
            color: #0c2e60; 
        }

        .slick-prev:before, .slick-next:before {
            color: orange;
        }

        #related-books-slider {
            display: block;
        }

        .related-book {
            width: auto !important;
            text-align: center;
            padding: 0 10px;
        }

        .related-book img {
            width: 150px;
            height: 200px;
            object-fit: cover;
            border-radius: 5px;
        }

        .slick-slide {
            padding: 0 10px; /* Khoảng cách giữa các phần tử trong slider */
        }

        .slick-prev, .slick-next {
            font-size: 20px;
        }

        .slick-track {
            display: flex;
            gap: 30px;
        }

    </style>


</head>
<body>
    <section class="feature_part">
        <div class="container my-5">
            <!-- breadcrumb --> 
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Document")">Tài liệu</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Document", new { SetId = Model.DocumentTypeId, GradeId = Model.GradeSubject.GradeId })">@Model.DocumentType?.Name</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Document", new { GradeId = Model.GradeSubject.GradeId, SetId = Model.DocumentTypeId })">@Model.GradeSubject.Grade.Name</a></li>
                    <li class="breadcrumb-item active" style="font-size: 16px" aria-current="page">@Model.Title</li>
                </ol>
            </nav>
            <div class="row mt-3">
                <div class="col-md-4 text-center">
                    @if (TempData["Message"] != null)
                    {
                        <div class="alert alert-success" role="alert">
                            @TempData["Message"]
                        </div>
                    }
                    @{
                        var thumbnailLink = $"https://drive.google.com/thumbnail?sz=w320&id={Model.GoogleDriveId}";
                        var defaultImage = "/pdf-image.png";
                    }
                    <img 
                        referrerPolicy="no-referrer" 
                        src="@thumbnailLink" alt="Document" 
                        class="img-fluid mb-3"
                        alt="@Model.Title"
                        onerror="this.onerror=null; this.src='@defaultImage';"
                    />
                    <h3 class="" style="color: #0c2e60">@Model.Title</h3>
                    <p>@Model.DocumentType?.Name</p></br>
                    <a class="btn btn_4 btn-sm" target="_blank" href="@Url.Action("Ebook", "Document", new { area = "", id = Model.Id })">Đọc</a>
                    <a class="btn btn_4 btn-sm" id="downloadButton" href="javascript:void(0);">Tải</a>
                    <form method="post" action="@Url.Action("AddToFavorite", "Favorite")" style="display:inline;">
                        <input type="hidden" name="documentId" value="@Model.Id" />
                        <button type="submit" class="btn btn_4 btn-sm">Lưu</button>
                    </form>
                </div>
                <div class="col-md-8">
                    <div class="book-info">
                        <h4>Thông tin</h4>
                        <strong>Nguời đăng:</strong>
                        @if (await UserManager.IsInRoleAsync(Model.User, "Admin"))
                        {
                             <span class="text-danger mr-3">Admin</span>
                        }
                        else
                        {
                            <span class="text-primary mr-3">@($"{Model.User.LastName} {Model.User.FirstName}")</span>                            
                        }
                        Lượt xem:
                        <span class="text-p rimary mr-3">@Model.Views</span>
                        Lượt tải:
                        <span class="text-primary mr-3">@Model.Downloads</span>
                        Ngày đăng:
                        <span class="text-primary mr-3">@Model.UploadDate.ToString("dd/MM/yyyy")</span>
                        <hr />
                        <strong>Từ khóa:</strong>
                        @if (Model.DocumentKeywords != null && Model.DocumentKeywords.Count > 0)
                        {
                            foreach (var documentKeyword in Model.DocumentKeywords)
                            {
                                <a href="@Url.Action("Index", "Keyword", new { keyword = documentKeyword.Keyword.UnsignValue })" class="btn btn-sm btn-outline-info">
                                    @documentKeyword.Keyword.Value
                                </a>
                            }
                        }
                        else
                        {
                            <p>Không có từ khóa.</p>
                        }
                        <hr />
                        <p>@Model.Description</p>
                    </div>
                </div>
            </div>
            <hr />
            <div class="comments-section mt-3">
                <h4>Đánh giá và bình luận</h4>
                @if (!User.Identity.IsAuthenticated)
                {
                    <div class="alert alert-warning" role="alert">
                        <strong>Bạn cần đăng nhập để đánh giá và bình luận tài liệu.</strong>
                    </div>
                }
                else
                {
                    <form id="ratingForm" method="post" action="@Url.Action("SubmitComment", "Document")">
                        <div class="form-group">
                            <select class="star-rating" id="rating" name="Rating" required>
                                <option value="">Đánh giá tài liệu</option>
                                <option value="5">Hoàn hảo</option>
                                <option value="4">Tốt</option>
                                <option value="3">Ổn</option>
                                <option value="2">Chưa tốt</option>
                                <option value="1">Không hài lòng</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <textarea id="comment" name="Comment" class="form-control" placeholder="Viết bình luận..." required></textarea>
                        </div>
                        <input type="hidden" name="DocumentId" value="@Model.Id" />
                        <div class="d-flex justify-content-end">
                            <button type="submit" class="genric-btn success-border circle arrow">Gửi</button>
                        </div>
                    </form>
                }
            </div>
            <hr />
            <div id="comments-list" class="mt-4">
                <div class="comment-summary d-flex p-3 bg-light border rounded">
                    <div class="summary-item mr-3">
                        <strong>Bình luận:</strong>
                        <span>@Model.TotalComments</span> bình luận
                    </div>
                    <div class="summary-item">
                        <strong>Đánh giá trung bình:</strong>
                        <span>@String.Format("{0:N1}", Model.AverageRating) sao</span>
                    </div>
                </div>

                @Html.Partial("_CommentList", Model.UserComments)
            </div>
            @if (Model.TotalComments > 0)
            {
                <div class="text-center mt-3">
                    <button id="loadMoreComments" class="btn btn-primary" data-offset="5">Hiển thị thêm</button>
                </div>
            }
            <hr />
            <div class="related-books-section mt-3">
                <h4>Tài liệu liên quan</h4>
                <div id="related-books-slider">
                    @foreach (var book in Model.RelatedBooks)
                    {
                        var thumbnailLink_related = $"https://drive.google.com/thumbnail?sz=w200&id={book.GoogleDriveId}";
                        var defaultImage_related = "/pdf-image.png";

                        <div class="related-book">
                            <a href="@Url.Action("Detail", "Document", new { id = book.Id })" target="_blank">
                                <img referrerPolicy="no-referrer"
                                     src="@thumbnailLink_related"
                                     alt="@book.Title"
                                     class="img-fluid"
                                     onerror="this.onerror=null; this.src='@defaultImage_related';"
                                     />
                            </a>
                            <div class="d-block w-100">
                                <span class="text-truncate" style="max-width: 100%; display: inline-block;">
                                    @book.Title
                                </span>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </section>  

    @section Scripts {
        <script>
            $(document).ready(function () {
                $('#commentForm').on('submit', function (e) {
                    e.preventDefault();

                    var formData = $(this).serialize();

                    $.ajax({
                        type: 'POST',
                        url:
                            '@Url.Action("SubmitComment", "Document")',
                        data: formData,
                        success: function (response) {
                            // Create a new comment element
                            var newComment = $('<li class="media my-3">')
                                .append($('<div class="media-body">')
                                    .append($('<h6>').text(response.username + ' (' + response.commentDate + ')'))
                                    .append($('<p>').text(response.comment)));

                            $('#commentList').append(newComment);

                            // Clear the textarea
                            $('#comment').val('');
                        },
                        error: function (response) {
                            alert('Something went wrong. Please try again.');
                        }
                    });
                });
            });

            // Download Btn
            $('#downloadButton').click(function () {
                const fileId = '@Model.GoogleDriveId';

                window.location.href = `/GoogleDrive/DownloadFile?fileId=${fileId}`;

                const userName = '@User.Identity.Name';
                const documentId = @Model.Id
                $.ajax({
                    url: `/DownloadHistory/SaveHistory?userName=${encodeURIComponent(userName)}&documentId=${documentId}`,
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    success: function (response) {
                        console.log("Đã lưu lịch sử tải xuống thành công:", response);
                        Swal.fire({
                            icon: 'success',
                            title: 'Thành công!',
                            text: 'Tải xuống thành công.',
                            toast: true,
                            position: 'bottom-end',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true,
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error('Lưu lịch sử tải xuống thất bại:', xhr.responseText);
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi!',
                            text: 'Không thể tải xuống.',
                            toast: true,
                            position: 'bottom-end',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true,
                        });
                    }
                });
            });
        </script>
        <script>
            var stars = new StarRating('.star-rating', {
                classNames: {
                    active: "gl-active",
                    base: "gl-star-rating",
                    selected: "gl-selected"
                },
                clearable: true,           
                maxStars: 5,              
                stars: null,
                tooltip: 'Đánh giá tài liệu'
            });

            document.querySelector('.star-rating').addEventListener('change', function () {
                document.getElementById('ratingValue').value = this.value;
            });
        </script>
        <script>
            $(document).on('click', '#loadMoreComments', function () {
                const button = $(this);
                const offset = button.data('offset');
                const documentId = @Model.Id;

                const url = '@Url.Action("LoadComments", "Document")';

                $.get(url, { documentId: documentId, offset: offset, limit: 5 }, function (data) {
                    if (data.trim()) {
                        $('#comments-list').append(data);
                        button.data('offset', offset + 5);
                    } else {
                        button.text('Không còn bình luận nào').prop('disabled', true);
                    }
                });
            });
        </script>
        <script>
            $(document).ready(function () {
                $('#related-books-slider').slick({
                    slidesToShow: 5,
                    slidesToScroll: 1, 
                    infinite: true,
                    dots: true, 
                    arrows: true,
                    centerMode: true,
                    responsive: [
                        {
                            breakpoint: 1024,
                            settings: {
                                slidesToShow: 3
                            }
                        },
                        {
                            breakpoint: 768,
                            settings: {
                                slidesToShow: 2
                            }
                        },
                        {
                            breakpoint: 480,
                            settings: {
                                slidesToShow: 1
                            }
                        }
                    ]
                });
            });
        </script>
    }
</body>