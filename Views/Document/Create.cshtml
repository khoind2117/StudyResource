@using StudyResource.ViewModels.Document
@model UserCreateDocumentViewModel

@{
    Layout = "_Layout";
}

<div class="container" style="margin-top:100px; margin-bottom:100px">
    <div class="card shadow">
        <div class="card-header bg-primary">
            <h4 class="mb-0 text-white">
                <i class="ti ti-pencil-plus"></i> Tạo tài liệu
            </h4>
        </div>
        <div class="card-body">
            <form asp-controller="Document" asp-action="Create" method="post" enctype="multipart/form-data">
                <div class="mb-3">
                    <label asp-for="Title" class="form-label">Tiêu đề</label>
                    <input asp-for="Title" class="form-control" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Description" class="form-label">Mô tả</label>
                    <textarea asp-for="Description" class="form-control"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="FileUpload" class="form-label">Tải lên tài liệu</label>
                    <input asp-for="FileUpload" class="form-control" type="file" />
                    <span asp-validation-for="FileUpload" class="text-danger"></span>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="GradeId" class="form-label">Lớp học</label>
                            <select asp-for="GradeId" class="form-select" id="gradeSelect">
                                <option value="">--Chọn lớp học--</option>
                                @foreach (var grade in ViewBag.Grades)
                                {
                                    <option value="@grade.Value">@grade.Text</option>
                                }
                            </select>
                            <span asp-validation-for="GradeId" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="GradeSubjectId" class="form-label">Môn học</label>
                            <select asp-for="GradeSubjectId" class="form-select" id="gradesubjectSelect">
                                <option value="">--Chọn môn học--</option>
                            </select>
                            <span asp-validation-for="GradeSubjectId" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="mb-3">
                    <label for="keywords" class="form-label">Từ khóa</label>
                    <input id="keywords" name="keywords" class="form-control" placeholder="Nhập từ khóa..." />
                    <small class="form-text text-muted">Nhấn dấu phẩy hay Enter để thêm từ khóa.</small>
                </div>

                <button type="submit" class="btn btn-primary">
                    <i class="ti ti-plus"></i> Tạo
                </button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const input = document.querySelector("#keywords");
            const tagify = new Tagify(input);

            tagify.on("add", e => console.log("Thêm từ khóa:", e.detail.data.value));

            tagify.on("remove", e => console.log("Xóa từ khóa:", e.detail.data.value));
        });
    </script>
    <script>
        const gradeSubjects = @Html.Raw(Json.Serialize(ViewBag.GradeSubjectsJson));

        document.getElementById("gradeSelect").addEventListener("change", function () {
            const gradeId = this.value;
            const gradesubjectSelect = document.getElementById("gradesubjectSelect");

            gradesubjectSelect.innerHTML = '<option value="">--Chọn môn học--</option>';

            const filteredSubjects = gradeSubjects.filter(gs => gs.gradeId == gradeId);

            filteredSubjects.forEach(gs => {
                const option = document.createElement("option");
                option.value = gs.id;
                option.textContent = gs.name;
                gradesubjectSelect.appendChild(option);
            });
        });
    </script>

    @if (TempData["SuccessMessage"] != null)
    {
        <script>
            const Toast = Swal.mixin({
                toast: true,
                position: "top-end",
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer);
                    toast.addEventListener('mouseleave', Swal.resumeTimer);
                }
            });
            Toast.fire({
                icon: "success",
                title: "@TempData["SuccessMessage"]"
            });
        </script>
    }
}